name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  server-tests:
    name: Server
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Set up node 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "yarn"
      - name: Install dependencies
        run: yarn install
      - name: Run tests
        run: yarn workspace @syncbase/server test:ci

  e2e-tests:
    name: E2E
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: syncbase_playwright
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Set up node 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "yarn"
      - name: Install dependencies
        run: yarn install
      - name: Install Playwright
        run: yarn workspace @syncbase/web playwright install --with-deps
        # -- Delete this install step when the next playwright update arrives! --
      - name: Install start-server-and-test npm package
        run: yarn workspace @syncbase/server add --dev start-server-and-test
        # -----------------------------------------------------------------------
      - name: Build server
        run: yarn workspace @syncbase/server build
      - name: Build web
        run: yarn workspace @syncbase/web build
        # -- Update this properly when the next playwright update arrives! --
      - name: Run tests
        run: yarn workspace @syncbase/server start-server-and-test 'usePlaywrightDB=1 yarn start' http://localhost:8082/.well-known/apollo/server-health 'yarn workspace @syncbase/web test'
        # -----------------------------------------------------------------------
        # Do I need this (it has something to do with playwright traces funny enough)?:
        # Also how should I handle caching of the browsers if needed?
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report
          path: playwright-report
